#summary This page gives instructions on the steps for setting up the beagleboard with beagleoncreate program.

= Introduction =

The beagleoncreate program interfaces with 3 sonars and webcam through WiFi connection. The tasks of setting up a working robot lie in:
 * Setting up the wireless connection.
 * Installing the uvc video driver.
 * Compile and install ARToolKitPlus library.
 * Get beagleoncreate from googlecode svn.
This page will guide you through setting up these setups to get a working robot.

= Requirements =
 * Beagleboard-xM Rev. C
 * 4GB microSD card
 * Serial cable
 * [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html PuTTY]

= From Production Copy =
The production copy is what you get on the microSD card that came with your Beagleboard. The 4GB microSD card that came with the Beagleboard should have a label "Beta 4-26". The image file can be found from [http://circuitco.com/support/index.php?title=BeagleBoard-xM#BeagleBoard-xM_Rev_C_Image circuitco.com]

When you are ready:
 # Insert the microSD card with the production copy into the Beagleboard. 
 # Connect the serial cable between the Beagleboard's DB9 connector and your computer's serial port. 
 # Run PuTTY on your computer and connect to the serial port with speed of 115200 baudrate. 
 # Power up the Beagleboard.

Wait a couple minutes and let the Beagleboard start booting up as you can see in the PuTTY terminal window.

[PUT PUTTY SERIAL CONNECTION PICTURE HERE]

To login, type:
{{{
login as: root
Password: (no password)
}}}

First, run a package list and system update:
{{{
opkg update
opkg upgrade
}}}

Install Vim:
{{{
opkg install vim vim-syntax
}}}
Copy the [http://beagleoncreate.googlecode.com/svn/trunk/doc/.vimrc .vimrc] under {{{~/}}}

= Setup WiFi network =
copy 8192cu.ko under {{{/lib/modules/2.6.32/kernel/drivers/net/wireless/8192cu.ko}}}
In the terminal, type in:
{{{
echo 8192cu >> /etc/modutils/8192cu
update-modules
reboot

...

}}}
After the Beagleboard has rebooted, execute:
{{{
lsmod
}}}
A list of currently running modules is shown. Make sure {{{8192cu}}} is listed.

*NOTE: This wifi driver is compiled for linux 2.6.32 kernel. So if your kernel is different, download the source and compile it as per instruction [http://yetanotherhackersblog.wordpress.com/2010/11/20/streaming-uvc-webcam-video-over-802-11n-with-a-beagleboard/ here]*

After the confirmation of the {{{8192cu}}} module, remove networkmanager:
{{{
opkg remove networkmanager --force-removal-of-dependent-packages
}}}
Without removing network manager, it will force the dhclient not receiving IP address.

Next, edit {{{/etc/network/interfaces}}} :
{{{
vim /etc/network/interfaces
}}}
Append following lines in the {{{/etc/network/interfaces}}}:
{{{
#auto usb0
iface usb0 inet dhcp

auto wlan0
iface wlan0 inet dhcp
        wpa-driver wext
        wpa-conf /etc/wpa_supplicant.conf

auto wlan1
iface wlan1 inet dhcp
        wpa-driver wext
        wpa-conf /etc/wpa_supplicant.conf
}}}
*Notice the {{{auto usb0}}} line is commented out.*

Edit {{{/etc/wpa_supplicant.conf}}}:
{{{
vim /etc/wpa_supplicant.conf
}}}
Append following lines in the {{{/etc/wpa_supplicant.conf}}}:
{{{
network={
        ssid="Create"
        key_mgmt=WPA-PSK
        psk="badbeef123"
        priority=50
        disabled=0
}

network={
        ssid="RedRover"
        key_mgmt=NONE
        priority=20
        disabled=0
}
}}}
Comment out all other network by adding "#" in front of them.

{{{
reboot

...

ifconfig
}}}
Reboot and see if the desired network is connected with the ip address provided.

= Setup PWM servo driver =









copy servodrive_1.0-r100.6_beagleboard.ipk to beagleboard
then cd to the folder where you copied the ipk file under on the beagleboard and to install, run:
opkg install servodrive_1.0-r100.6_beagleboard.ipk

to auto load servodrive module on startup:
echo servodrive >> /etc/modutils/servodrive
update-modules

reboot, then run:
lsmod to make sure servodrive is listed

NOTE: This PWM servo driver is compiled for linux 2.6.32 kernel. So if your kernel is different, download the source and refer to http://www.angstrom-distribution.org/building-angstrom for instruction on setting up openembedded toolchain.

Install USB Video Class driver
opkg install kernel-module-uvcvideo
to auto load uvcvideo module on startup:
echo uvcvideo >> /etc/modutils/uvcvideo
update-modules

reboot, then run:
lsmod to make sure uvcvideo is listed

Create new user
useradd beagle
passwd beagle
opkg install sudo
vim /etc/sudoers
append:
root	ALL=(ALL)	ALL
beagle	ALL=(ALL)	ALL

copy .bashrc under /home/beagle/
copy .vimrc under /home/beagle/

Login beagle from now on

Install ARToolKitPlus library
requires task-native-sdk and cmake package:
sudo opkg install task-native-sdk cmake
get gcc to work
ln -s /lib/libgcc_s.so.1  /lib/libgcc_s.so
ln -s /usr/lib/libstdc++.so.6.0.10  /lib/libstdc++.so

download the source and place in beagleboard under ~/
untar the archive
cd ARToolKitPlus-2.2.1/
cmake -G “Unix Makefiles”
make
sudo make install DESTDIR=/


Get code on beagleboard
sudo opkg install subversion
cd ~
svn checkout https://beagleoncreate.googlecode.com/svn/trunk/ beagleoncreate --username yangchuck@gmail.com

sudo opkg install opencv opencv-dev libopencv-ml-dev libopencv-objdetect-dev libopencv-legacy-dev gstreamer-dev gst-plugins-base-dev
try running:
make

copy these if needed:
artoolkitplus.pc 
opencv.pc 
gstreamer-0.10.pc 
gstreamer-app-0.10.pc 
glib-2.0.pc
gobject-2.0.pc
gthread-2.0.pc
gmodule-no-export-2.0.pc
libxml-2.0.pc
gstreamer-base-0.10.pc
into /usr/lib/pkgconfig:
sudo cp ~/*.pc /usr/lib/pkgconfig/
type pkg-config --list-all to double check

this should generate a main file under the folder, type:
sudo ./main


After the first copy of image is done. Follow this page to copy file system over:
http://pixhawk.ethz.ch/wiki/tutorials/omap/copy_sd_card

Note: the partition table of the destination sd card should be the same as the source sd card. I am only copying over the 4GB sd card that came with the beagleboard.

When you are writing from image to sdcard, be sure to unmount the partition